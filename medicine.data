{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "67998aa6-3c95-4790-a895-993ea3589c54",
   "metadata": {},
   "outputs": [],
   "source": [
    "import sqlite3\n",
    "import tkinter as tk\n",
    "from tkinter import messagebox\n",
    "\n",
    "# Database Connection\n",
    "def connect_db():\n",
    "    conn = sqlite3.connect(\"medicine.db\")\n",
    "    cursor = conn.cursor()\n",
    "    cursor.execute(\"CREATE TABLE IF NOT EXISTS medicines (id INTEGER PRIMARY KEY, name TEXT, expiry_date TEXT, price REAL)\")\n",
    "    conn.commit()\n",
    "    conn.close()\n",
    "\n",
    "# Insert Data\n",
    "def insert_data():\n",
    "    name = name_entry.get()\n",
    "    expiry_date = expiry_entry.get()\n",
    "    price = price_entry.get()\n",
    "    if name and expiry_date and price:\n",
    "        conn = sqlite3.connect(\"medicine.db\")\n",
    "        cursor = conn.cursor()\n",
    "        cursor.execute(\"INSERT INTO medicines (name, expiry_date, price) VALUES (?, ?, ?)\", (name, expiry_date, price))\n",
    "        conn.commit()\n",
    "        conn.close()\n",
    "        name_entry.delete(0, tk.END)\n",
    "        expiry_entry.delete(0, tk.END)\n",
    "        price_entry.delete(0, tk.END)\n",
    "        messagebox.showinfo(\"Success\", \"Medicine Data Inserted Successfully\")\n",
    "    else:\n",
    "        messagebox.showerror(\"Error\", \"Please enter all details\")\n",
    "\n",
    "# Fetch Data\n",
    "def fetch_data():\n",
    "    conn = sqlite3.connect(\"medicine.db\")\n",
    "    cursor = conn.cursor()\n",
    "    cursor.execute(\"SELECT * FROM medicines\")\n",
    "    records = cursor.fetchall()\n",
    "    conn.close()\n",
    "    \n",
    "    listbox.delete(0, tk.END)\n",
    "    for record in records:\n",
    "        listbox.insert(tk.END, record)\n",
    "\n",
    "# GUI Setup\n",
    "root = tk.Tk()\n",
    "root.title(\"Medicine Data Management\")\n",
    "root.geometry(\"500x400\")\n",
    "\n",
    "connect_db()\n",
    "\n",
    "tk.Label(root, text=\"Medicine Name:\").pack()\n",
    "name_entry = tk.Entry(root)\n",
    "name_entry.pack()\n",
    "\n",
    "tk.Label(root, text=\"Expiry Date (YYYY-MM-DD):\").pack()\n",
    "expiry_entry = tk.Entry(root)\n",
    "expiry_entry.pack()\n",
    "\n",
    "tk.Label(root, text=\"Price:\").pack()\n",
    "price_entry = tk.Entry(root)\n",
    "price_entry.pack()\n",
    "\n",
    "tk.Button(root, text=\"Insert Data\", command=insert_data).pack()\n",
    "tk.Button(root, text=\"Fetch Data\", command=fetch_data).pack()\n",
    "\n",
    "listbox = tk.Listbox(root, width=60)\n",
    "listbox.pack()\n",
    "\n",
    "root.mainloop()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3bb3102b-6110-447f-851b-e0479b74b937",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python [conda env:base] *",
   "language": "python",
   "name": "conda-base-py"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
